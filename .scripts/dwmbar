#!/bin/sh

# Handle SIGTRAP signals sent by refbar to update the status bar immediately.
trap 'update' 5

# Set the deliminter character.
delim=""


# Here is the (big) function that outputs the appearance of the statusbar. It
# can really be broken down into many submodules which I've commented and
# explained.
status() { \
	# Get the volume of ALSA's master volume output.  Show an icon if or
	# not muted.
	#amixer get Master | grep -o "[0-9]*%\|\[on\]\|\[off\]" | sed "s/\[on\]//;s/\[off\]//"
	
	audio_status=$(amixer get Master | grep -o "\[on\]\|\[off\]")
	if [ $audio_status = "[off]" ]; then
	    echo ""
	    echo "0%"
        else
            echo ""
            echo "$(amixer get Master | awk -F"[][]" '{print $2}' | xargs)"
	fi

	echo "$delim"

	
	# Wifi icon and SSID and  icon if ethernet is connected.
	wireless=$(grep "^\s*w" /proc/net/wireless | awk '{ print "" }')

	if [ -z $wireless ]; then
	    echo "睊"
            echo "Not connected"
	else
	    echo "$wireless"
	    echo "$(iw dev | awk "/ssid/ {print}" | sed "s/ssid //" | xargs)"
        fi
	sed "s/down//;s/up//" /sys/class/net/e*/operstate

	echo "$delim"


	# Will show all batteries with approximate icon for remaining power.

	charging=$(acpi | awk '/,/ {print $3}')
	if [ $charging = "Charging," ]; then
		echo ""
	else
	    for x in /sys/class/power_supply/BAT?/capacity;
	        do
		    case "$(cat $x)" in
		        100|9[0-9])		echo "" ;;
		        8[0-9]|7[0-9])		echo "" ;;
		        6[0-9]|5[0-9])		echo "" ;;
		        4[0-9]|3[0-9])		echo "" ;;
		        *)			echo "" ;;
		    esac
		done
	fi
	echo "$(cat /sys/class/power_supply/BAT0/capacity)% $delim"

	
	# Date and time.
	date '+%d/%m/%Y %H:%M'
	
}



update() { \
	# So all that big status function was just a command that quicking gets
	# what we want to be the statusbar. This xsetroot command is what sets
	# it. Note that the tr command replaces newlines with spaces. This is
	# to prevent some weird issues that cause significant slowing of
	# everything in dwm. Note entirely sure of the cause, but again, the tr
	# command easily avoids it.
	xsetroot -name "$(status | tr '\n' ' ')" &
    wait

}


while :; do
    update
	# Sleep for a minute after changing the status bar before updating it
	# again. We run sleep in the background and use wait until it finishes,
    # because traps can interrupt wait immediately, but they can't do that
    # with sleep.
	sleep 1m &
    wait
done
